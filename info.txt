---- Domain Project -----
 the project containing the domain entities, data access logic(repositories), and application logic (service layer)

---- API Project -------
API project will hold the ASP.NET Web API components for building the HTTP API logic itself.
These components contain controllers, message handlers, filters, custom parameter bindings, and other tools to
maintain the project over time by separating the concerns. The PingYourPackage.API will hold the authentication and
authorization logic, too.


---- to install ASP Web API Components -----
Install-Package Microsoft.AspNet.WebApi.Core -ProjectName PingYourPackage.API

--------Autofac.WebApi ---------
Autofac IoC Container. It is used to inject required dependencies, like repositories, into our controllers. The Autofac container neatly integrates with ASP.NET Web API
and the appropriate NuGet package, for this is Autofac.WebApi, which refers to the core Autofac container
Install-Package Autofac.WebApi -ProjectName PingYourPackage.API


--------Microsoft.AspNet.WebApi.WebHost----------
The first NuGet package to add is Microsoft.AspNet.WebApi.WebHost, which resolves all necessary ASP.NET
Web API dependencies and also references them. The Microsoft.AspNet.WebApi.WebHost NuGet package depends
on the Microsoft.AspNet.WebApi.Core package and brings a specific hosting component for ASP.NET.

--- install ENtity Framework -----
Install-Package EntityFramework


--enable migrations----
 Enable-Migrations

--- Add Migrations ---
Add-Migration -Name "ValidationAttributeChanges" -StartUpProjectName PingYourPackage.API.WebHost



 When we need to work with the data—for example, inside a controller—we will be working with IEntityRepository<T> (e.g., IEntityRepository<User>),
and the implementation will be injected through an IoC container, which is the Autofac for our application.


- created your database models by leveraging the Entity Framework code–first approach 
- created a generic repository to gain access to the data.
- introduced the service layer by implementing the membership and crypto services.
- infrastructure such as routes, configuration
- setting up the Inversion of Control (IoC) container


